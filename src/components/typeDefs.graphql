# This schema allows the following queries:
type Query {
  light(lightId: String!): Light
  lights: [Light]
}

# This schema allows the following mutations:
type Mutation {
  setLight(light: LightInput!): Light
  addLight(lightId: String!): Light
  removeLight(lightId: String!): Light
}

type Subscription {
  lightChanged(lightId: String!): Light
  lightsChanged: Light
  lightAdded: Light
  lightRemoved: Light
}

type Light {
  id: String # uique name of accessory
  connected: Int
  state: String # curent power status
  brightness: Int # current brightness
  color: Color # current color
  effect: String # current effect
  speed: Int # effect speed
  supportedEffects: [String] # List of supported effects
}

input LightInput {
  id: String!
  state: String
  brightness: Int
  color: ColorInput
  effect: String
  speed: Int
}

type Color {
  r: Int!
  g: Int!
  b: Int!
}

input ColorInput {
  r: Int!
  g: Int!
  b: Int!
}
