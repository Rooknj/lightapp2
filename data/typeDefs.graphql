# This schema allows the following queries:
type Query {
  getFortuneCookie: String
  #identify: Light
  light(lightId: Int!): Light
  lights: [Light]
}

# This schema allows the following mutations:
type Mutation {
  setName(lightId: Int!, name: String!): Light 
  setPower(lightId: Int!, power: Boolean!): Light 
  setBrightness(lightId: Int!, brightness: Int!): Light 
  setHue(lightId: Int!, hue: Int!): Light 
  setSaturation(lightId: Int!, saturation: Int!): Light 
  setLight(lightId: Int!, light: LightInput!): Light
  addLight(newLight: LightInput!): Light
}

type Subscription {
  lightAdded: Light
  lightChanged(lightId: Int!): Light
}

type Comment {
    id: String
    content: String
}

type Light {
  id: Int!
  name: String # name of accessory
  power: Boolean, # curent power status
  brightness: Int, # current brightness
  hue: Int, # current hue
  saturation: Int, # current saturation
}

input LightInput {
  name: String # name of accessory
  power: Boolean, # curent power status
  brightness: Int, # current brightness
  hue: Int, # current hue
  saturation: Int, # current saturation
}
